
package formularios;

import Classes.OrdemServico;
import ClassesDao.OrdemServicoDAO;
import ClassesDao.OrdemServicoItemDAO;
import ClassesEnum.StatusOS;
import ConexaoBancoDados.ConexaoBancoDados;
import Formatadores.LetrasMaiusculas;
import Formatadores.TeclasNumericaKM;
import static formularios.frmMenuPrincipal.JDesktopPanePrincipall;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
/**
 *
 * @author João Carlos Batista
 */
public class FrmOrdemServico extends javax.swing.JInternalFrame {

    static PreparedStatement ps;
    static ConexaoBancoDados ordemServicoConect = new ConexaoBancoDados();
    int idCliente = 0;
    int cod_os = 0;
    int valor = 0;
    public static double TotalPeca = 0;
    public static double TotalServico = 0;

    public FrmOrdemServico(int os_Cod) {
        initComponents();

        this.cod_os = os_Cod;
        txtKmEntrada.setDocument(new TeclasNumericaKM());
        tblItens.getColumnModel().getColumn(0).setMinWidth(0);
        tblItens.getColumnModel().getColumn(0).setMaxWidth(0);
        tblItens.getColumnModel().getColumn(1).setMinWidth(0);
        tblItens.getColumnModel().getColumn(1).setMaxWidth(0);
        tblItens.getColumnModel().getColumn(2).setMinWidth(0);
        tblItens.getColumnModel().getColumn(2).setMaxWidth(0);
        //SERVIÇO
        tblItensServico.getColumnModel().getColumn(0).setMinWidth(0);
        tblItensServico.getColumnModel().getColumn(0).setMaxWidth(0);
        tblItensServico.getColumnModel().getColumn(1).setMinWidth(0);
        tblItensServico.getColumnModel().getColumn(1).setMaxWidth(0);
        tblItensServico.getColumnModel().getColumn(2).setMinWidth(0);
        tblItensServico.getColumnModel().getColumn(2).setMaxWidth(0);
        jScrollPaneItens.setBackground(Color.WHITE);
        
        jTextAreaDefeito.setDocument(new LetrasMaiusculas());
        
        carregarOrdemServico(cod_os);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlprincipal = new javax.swing.JPanel();
        pnlStatusOS = new javax.swing.JPanel();
        lblOS = new javax.swing.JLabel();
        txtOSNum = new javax.swing.JTextField();
        lblDataEntrada = new javax.swing.JLabel();
        txtDataEntrada = new javax.swing.JTextField();
        pnlProprietario = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        pnlVeiculo = new javax.swing.JPanel();
        lblPlaca = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        lblFabricante = new javax.swing.JLabel();
        txtFabricante = new javax.swing.JTextField();
        lblModelo = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        lblAnoFab = new javax.swing.JLabel();
        txtAnoFab = new javax.swing.JTextField();
        lblCor = new javax.swing.JLabel();
        txtCor = new javax.swing.JTextField();
        lblCombustivel = new javax.swing.JLabel();
        txtCombustivel = new javax.swing.JTextField();
        jDateChooserDataSaida = new com.toedter.calendar.JDateChooser();
        lblKmEntrada = new javax.swing.JLabel();
        txtKmEntrada = new javax.swing.JTextField();
        lblDataEntrega = new javax.swing.JLabel();
        lblTanque = new javax.swing.JLabel();
        cmbTanque = new javax.swing.JComboBox<>();
        lblStatusOS = new javax.swing.JLabel();
        cmbStatusOS = new javax.swing.JComboBox<>();
        btnInserirItem = new javax.swing.JButton();
        btnInserirServico = new javax.swing.JButton();
        btnAlterarItem = new javax.swing.JButton();
        btnExcluirItem = new javax.swing.JButton();
        jTabbedPanePecaServico = new javax.swing.JTabbedPane();
        jScrollPaneItens = new javax.swing.JScrollPane();
        tblItens = new javax.swing.JTable();
        jScrollPaneServico = new javax.swing.JScrollPane();
        tblItensServico = new javax.swing.JTable();
        jScrollPaneDefeito = new javax.swing.JScrollPane();
        jTextAreaDefeito = new javax.swing.JTextArea();
        lblValorTotal = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnSalvarOS = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setTitle("Controle de Ordem de Serviço");
        setMinimumSize(new java.awt.Dimension(948, 614));
        setPreferredSize(new java.awt.Dimension(948, 625));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnlprincipal.setBackground(new java.awt.Color(255, 255, 255));
        pnlprincipal.setName("pnlprincipal"); // NOI18N
        pnlprincipal.setPreferredSize(new java.awt.Dimension(870, 540));
        pnlprincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlStatusOS.setBackground(new java.awt.Color(255, 255, 255));
        pnlStatusOS.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "O.S", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N
        pnlStatusOS.setName("pnlStatusOS"); // NOI18N
        pnlStatusOS.setPreferredSize(new java.awt.Dimension(290, 80));
        pnlStatusOS.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblOS.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblOS.setText("O.S N°");
        lblOS.setName("lblOS"); // NOI18N
        pnlStatusOS.add(lblOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 25, -1, -1));

        txtOSNum.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtOSNum.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtOSNum.setEnabled(false);
        txtOSNum.setMinimumSize(new java.awt.Dimension(120, 25));
        txtOSNum.setName("txtOSNum"); // NOI18N
        txtOSNum.setPreferredSize(new java.awt.Dimension(120, 25));
        pnlStatusOS.add(txtOSNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 45, 120, -1));

        lblDataEntrada.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDataEntrada.setText("Data Entrada");
        lblDataEntrada.setName("lblDataEntrada"); // NOI18N
        pnlStatusOS.add(lblDataEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 25, -1, -1));

        txtDataEntrada.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtDataEntrada.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtDataEntrada.setEnabled(false);
        txtDataEntrada.setMinimumSize(new java.awt.Dimension(120, 25));
        txtDataEntrada.setName("txtDataEntrada"); // NOI18N
        txtDataEntrada.setPreferredSize(new java.awt.Dimension(120, 25));
        pnlStatusOS.add(txtDataEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 45, 120, -1));

        pnlprincipal.add(pnlStatusOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 10, 290, 80));

        pnlProprietario.setBackground(new java.awt.Color(255, 255, 255));
        pnlProprietario.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Proprietário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N
        pnlProprietario.setName("pnlProprietario"); // NOI18N
        pnlProprietario.setPreferredSize(new java.awt.Dimension(600, 80));
        pnlProprietario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblNome.setText("Nome/Razão Social");
        lblNome.setName("lblNome"); // NOI18N
        pnlProprietario.add(lblNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 25, -1, -1));

        txtNome.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNome.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtNome.setEnabled(false);
        txtNome.setMinimumSize(new java.awt.Dimension(420, 25));
        txtNome.setName("txtNome"); // NOI18N
        txtNome.setPreferredSize(new java.awt.Dimension(420, 25));
        pnlProprietario.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 45, 420, -1));

        pnlprincipal.add(pnlProprietario, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 10, 600, -1));

        pnlVeiculo.setBackground(new java.awt.Color(255, 255, 255));
        pnlVeiculo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados do veículo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N
        pnlVeiculo.setName("pnlVeiculo"); // NOI18N
        pnlVeiculo.setPreferredSize(new java.awt.Dimension(900, 150));
        pnlVeiculo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPlaca.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblPlaca.setText("Placa");
        lblPlaca.setName("lblPlaca"); // NOI18N
        pnlVeiculo.add(lblPlaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 25, -1, -1));

        txtPlaca.setEditable(false);
        txtPlaca.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtPlaca.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtPlaca.setEnabled(false);
        txtPlaca.setMinimumSize(new java.awt.Dimension(90, 25));
        txtPlaca.setName("txtPlaca"); // NOI18N
        txtPlaca.setPreferredSize(new java.awt.Dimension(80, 25));
        pnlVeiculo.add(txtPlaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 45, 80, -1));

        lblFabricante.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFabricante.setText("Fabricante");
        lblFabricante.setName("lblFabricante"); // NOI18N
        pnlVeiculo.add(lblFabricante, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 25, -1, -1));

        txtFabricante.setEditable(false);
        txtFabricante.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtFabricante.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtFabricante.setEnabled(false);
        txtFabricante.setMinimumSize(new java.awt.Dimension(160, 25));
        txtFabricante.setName("txtFabricante"); // NOI18N
        txtFabricante.setPreferredSize(new java.awt.Dimension(160, 25));
        txtFabricante.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFabricanteFocusLost(evt);
            }
        });
        txtFabricante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFabricanteKeyPressed(evt);
            }
        });
        pnlVeiculo.add(txtFabricante, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 45, 160, -1));

        lblModelo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblModelo.setText("Modelo");
        lblModelo.setName("lblModelo"); // NOI18N
        pnlVeiculo.add(lblModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 25, -1, -1));

        txtModelo.setEditable(false);
        txtModelo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtModelo.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtModelo.setEnabled(false);
        txtModelo.setMinimumSize(new java.awt.Dimension(230, 25));
        txtModelo.setName("txtModelo"); // NOI18N
        txtModelo.setPreferredSize(new java.awt.Dimension(210, 25));
        pnlVeiculo.add(txtModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 45, 350, -1));

        lblAnoFab.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblAnoFab.setText("Ano Fab.");
        lblAnoFab.setName("lblAnoFab"); // NOI18N
        pnlVeiculo.add(lblAnoFab, new org.netbeans.lib.awtextra.AbsoluteConstraints(665, 25, -1, -1));

        txtAnoFab.setEditable(false);
        txtAnoFab.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtAnoFab.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtAnoFab.setEnabled(false);
        txtAnoFab.setMinimumSize(new java.awt.Dimension(70, 25));
        txtAnoFab.setName("txtAnoFab"); // NOI18N
        txtAnoFab.setPreferredSize(new java.awt.Dimension(60, 25));
        txtAnoFab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnoFabActionPerformed(evt);
            }
        });
        pnlVeiculo.add(txtAnoFab, new org.netbeans.lib.awtextra.AbsoluteConstraints(665, 45, 60, -1));

        lblCor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCor.setText("Cor");
        lblCor.setName("lblCor"); // NOI18N
        pnlVeiculo.add(lblCor, new org.netbeans.lib.awtextra.AbsoluteConstraints(745, 25, -1, -1));

        txtCor.setEditable(false);
        txtCor.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtCor.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtCor.setEnabled(false);
        txtCor.setMinimumSize(new java.awt.Dimension(120, 25));
        txtCor.setName("txtCor"); // NOI18N
        txtCor.setPreferredSize(new java.awt.Dimension(135, 25));
        txtCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorActionPerformed(evt);
            }
        });
        pnlVeiculo.add(txtCor, new org.netbeans.lib.awtextra.AbsoluteConstraints(745, 45, 135, -1));

        lblCombustivel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCombustivel.setText("Combustível");
        lblCombustivel.setName("lblCombustivel"); // NOI18N
        pnlVeiculo.add(lblCombustivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 90, -1, -1));

        txtCombustivel.setEditable(false);
        txtCombustivel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtCombustivel.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtCombustivel.setEnabled(false);
        txtCombustivel.setName("txtCombustivel"); // NOI18N
        txtCombustivel.setPreferredSize(new java.awt.Dimension(120, 25));
        txtCombustivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCombustivelActionPerformed(evt);
            }
        });
        pnlVeiculo.add(txtCombustivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 110, 120, -1));

        jDateChooserDataSaida.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jDateChooserDataSaida.setMinimumSize(new java.awt.Dimension(130, 25));
        jDateChooserDataSaida.setName("jDateChooserDataSaida"); // NOI18N
        jDateChooserDataSaida.setPreferredSize(new java.awt.Dimension(130, 25));
        pnlVeiculo.add(jDateChooserDataSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 110, 130, 25));

        lblKmEntrada.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblKmEntrada.setText("Km Entrada");
        lblKmEntrada.setName("lblKmEntrada"); // NOI18N
        pnlVeiculo.add(lblKmEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 90, -1, -1));

        txtKmEntrada.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtKmEntrada.setMinimumSize(new java.awt.Dimension(90, 25));
        txtKmEntrada.setName("txtPlaca"); // NOI18N
        txtKmEntrada.setPreferredSize(new java.awt.Dimension(90, 25));
        pnlVeiculo.add(txtKmEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 110, 90, 25));

        lblDataEntrega.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDataEntrega.setText("Previsão Entrega");
        lblDataEntrega.setName("lblKmEntrada"); // NOI18N
        pnlVeiculo.add(lblDataEntrega, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 90, -1, -1));

        lblTanque.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTanque.setText("Tanque");
        lblTanque.setName("lblTanque"); // NOI18N
        pnlVeiculo.add(lblTanque, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 90, -1, -1));

        cmbTanque.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmbTanque.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "::SELECIONE::", "NA RESERVA", "UM QUARTO", "MEIO TANQUE", "TRÊS QUARTOS", "CHEIO" }));
        cmbTanque.setMinimumSize(new java.awt.Dimension(140, 25));
        cmbTanque.setName("cmbTanque"); // NOI18N
        cmbTanque.setPreferredSize(new java.awt.Dimension(140, 25));
        cmbTanque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTanqueActionPerformed(evt);
            }
        });
        pnlVeiculo.add(cmbTanque, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 110, 140, 25));

        lblStatusOS.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblStatusOS.setText("Status O.S");
        lblStatusOS.setName("lblStatusOS"); // NOI18N
        pnlVeiculo.add(lblStatusOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 90, -1, -1));

        cmbStatusOS.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmbStatusOS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EM FILA DE ESPERA", "EM ANDAMENTO" }));
        cmbStatusOS.setMinimumSize(new java.awt.Dimension(140, 25));
        cmbStatusOS.setName("cmbStatusOS"); // NOI18N
        cmbStatusOS.setPreferredSize(new java.awt.Dimension(150, 25));
        cmbStatusOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusOSActionPerformed(evt);
            }
        });
        pnlVeiculo.add(cmbStatusOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 110, 150, 25));

        pnlprincipal.add(pnlVeiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 100, 900, -1));

        btnInserirItem.setBackground(new java.awt.Color(0, 123, 255));
        btnInserirItem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnInserirItem.setForeground(new java.awt.Color(255, 255, 255));
        btnInserirItem.setText("Peça");
        btnInserirItem.setBorderPainted(false);
        btnInserirItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInserirItem.setName("btnInserirItem"); // NOI18N
        btnInserirItem.setPreferredSize(new java.awt.Dimension(100, 40));
        btnInserirItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInserirItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInserirItemMouseExited(evt);
            }
        });
        btnInserirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirItemActionPerformed(evt);
            }
        });
        pnlprincipal.add(btnInserirItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 260, 100, 40));

        btnInserirServico.setBackground(new java.awt.Color(52, 73, 94));
        btnInserirServico.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnInserirServico.setForeground(new java.awt.Color(255, 255, 255));
        btnInserirServico.setText("Serviço");
        btnInserirServico.setBorderPainted(false);
        btnInserirServico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInserirServico.setName("btnInserirServico"); // NOI18N
        btnInserirServico.setPreferredSize(new java.awt.Dimension(100, 40));
        btnInserirServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInserirServicoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInserirServicoMouseExited(evt);
            }
        });
        btnInserirServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirServicoActionPerformed(evt);
            }
        });
        pnlprincipal.add(btnInserirServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 260, 100, 40));

        btnAlterarItem.setBackground(new java.awt.Color(40, 167, 69));
        btnAlterarItem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAlterarItem.setForeground(new java.awt.Color(255, 255, 255));
        btnAlterarItem.setText("Alterar");
        btnAlterarItem.setBorderPainted(false);
        btnAlterarItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterarItem.setName("btnAlterarItem"); // NOI18N
        btnAlterarItem.setPreferredSize(new java.awt.Dimension(100, 40));
        btnAlterarItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAlterarItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAlterarItemMouseExited(evt);
            }
        });
        btnAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarItemActionPerformed(evt);
            }
        });
        pnlprincipal.add(btnAlterarItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(701, 260, 100, 40));

        btnExcluirItem.setBackground(new java.awt.Color(220, 53, 69));
        btnExcluirItem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnExcluirItem.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluirItem.setText("Excluir");
        btnExcluirItem.setBorderPainted(false);
        btnExcluirItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluirItem.setMaximumSize(new java.awt.Dimension(80, 23));
        btnExcluirItem.setMinimumSize(new java.awt.Dimension(80, 23));
        btnExcluirItem.setName("btnExcluirItem"); // NOI18N
        btnExcluirItem.setPreferredSize(new java.awt.Dimension(100, 40));
        btnExcluirItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExcluirItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExcluirItemMouseExited(evt);
            }
        });
        btnExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirItemActionPerformed(evt);
            }
        });
        pnlprincipal.add(btnExcluirItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(811, 260, 100, 40));

        jTabbedPanePecaServico.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPanePecaServico.setForeground(new java.awt.Color(51, 51, 51));
        jTabbedPanePecaServico.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTabbedPanePecaServico.setPreferredSize(new java.awt.Dimension(900, 230));

        jScrollPaneItens.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPaneItens.setName("jScrollPaneItens"); // NOI18N
        jScrollPaneItens.setPreferredSize(new java.awt.Dimension(820, 240));

        tblItens.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblItens.setForeground(new java.awt.Color(51, 51, 51));
        tblItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código OS", "CódigoItem", "CódigoPeça", "Item", "Descrição", "Quant", "Valor Unit.", "Sub-Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblItens.setGridColor(new java.awt.Color(255, 255, 255));
        tblItens.setName("tblItens"); // NOI18N
        tblItens.setPreferredSize(new java.awt.Dimension(840, 240));
        tblItens.setRowHeight(20);
        tblItens.setRowMargin(6);
        jScrollPaneItens.setViewportView(tblItens);
        if (tblItens.getColumnModel().getColumnCount() > 0) {
            tblItens.getColumnModel().getColumn(0).setResizable(false);
            tblItens.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblItens.getColumnModel().getColumn(1).setResizable(false);
            tblItens.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblItens.getColumnModel().getColumn(2).setResizable(false);
            tblItens.getColumnModel().getColumn(2).setPreferredWidth(0);
            tblItens.getColumnModel().getColumn(3).setResizable(false);
            tblItens.getColumnModel().getColumn(3).setPreferredWidth(50);
            tblItens.getColumnModel().getColumn(4).setResizable(false);
            tblItens.getColumnModel().getColumn(4).setPreferredWidth(480);
            tblItens.getColumnModel().getColumn(5).setResizable(false);
            tblItens.getColumnModel().getColumn(5).setPreferredWidth(50);
            tblItens.getColumnModel().getColumn(6).setResizable(false);
            tblItens.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblItens.getColumnModel().getColumn(7).setResizable(false);
            tblItens.getColumnModel().getColumn(7).setPreferredWidth(100);
        }

        jTabbedPanePecaServico.addTab("Peças", jScrollPaneItens);

        jScrollPaneServico.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPaneServico.setName("jScrollPaneServico"); // NOI18N
        jScrollPaneServico.setPreferredSize(new java.awt.Dimension(820, 240));

        tblItensServico.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblItensServico.setForeground(new java.awt.Color(51, 51, 51));
        tblItensServico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código OS", "CódigoItem", "CódigoPeça", "Item", "Descrição", "Quant", "Valor Unit.", "Sub-Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblItensServico.setGridColor(new java.awt.Color(255, 255, 255));
        tblItensServico.setName("tblItens"); // NOI18N
        tblItensServico.setPreferredSize(new java.awt.Dimension(840, 240));
        tblItensServico.setRowHeight(20);
        jScrollPaneServico.setViewportView(tblItensServico);
        if (tblItensServico.getColumnModel().getColumnCount() > 0) {
            tblItensServico.getColumnModel().getColumn(0).setResizable(false);
            tblItensServico.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblItensServico.getColumnModel().getColumn(1).setResizable(false);
            tblItensServico.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblItensServico.getColumnModel().getColumn(2).setResizable(false);
            tblItensServico.getColumnModel().getColumn(2).setPreferredWidth(0);
            tblItensServico.getColumnModel().getColumn(3).setResizable(false);
            tblItensServico.getColumnModel().getColumn(3).setPreferredWidth(50);
            tblItensServico.getColumnModel().getColumn(4).setResizable(false);
            tblItensServico.getColumnModel().getColumn(4).setPreferredWidth(480);
            tblItensServico.getColumnModel().getColumn(5).setResizable(false);
            tblItensServico.getColumnModel().getColumn(5).setPreferredWidth(50);
            tblItensServico.getColumnModel().getColumn(6).setResizable(false);
            tblItensServico.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblItensServico.getColumnModel().getColumn(7).setResizable(false);
            tblItensServico.getColumnModel().getColumn(7).setPreferredWidth(100);
        }

        jTabbedPanePecaServico.addTab("Serviço", jScrollPaneServico);

        jScrollPaneDefeito.setName("jScrollPaneDefeito"); // NOI18N
        jScrollPaneDefeito.setPreferredSize(new java.awt.Dimension(820, 240));

        jTextAreaDefeito.setColumns(20);
        jTextAreaDefeito.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTextAreaDefeito.setRows(5);
        jTextAreaDefeito.setName("jTextAreaDefeito"); // NOI18N
        jScrollPaneDefeito.setViewportView(jTextAreaDefeito);

        jTabbedPanePecaServico.addTab("Defeitos encontrados", jScrollPaneDefeito);

        pnlprincipal.add(jTabbedPanePecaServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 280, 900, 230));

        lblValorTotal.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblValorTotal.setText("Valor Total");
        lblValorTotal.setName("lblFabricante"); // NOI18N
        pnlprincipal.add(lblValorTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 520, -1, -1));

        lblTotal.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(204, 0, 0));
        lblTotal.setText("R$0,00");
        lblTotal.setToolTipText("");
        lblTotal.setName("lblFabricante"); // NOI18N
        pnlprincipal.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 540, -1, -1));

        btnSalvarOS.setBackground(new java.awt.Color(0, 123, 255));
        btnSalvarOS.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnSalvarOS.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvarOS.setText("Salvar");
        btnSalvarOS.setBorderPainted(false);
        btnSalvarOS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvarOS.setName("btnSalvarOS"); // NOI18N
        btnSalvarOS.setPreferredSize(new java.awt.Dimension(105, 40));
        btnSalvarOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSalvarOSMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSalvarOSMouseExited(evt);
            }
        });
        btnSalvarOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarOSActionPerformed(evt);
            }
        });
        pnlprincipal.add(btnSalvarOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 525, 110, 40));

        btnImprimir.setBackground(new java.awt.Color(52, 73, 94));
        btnImprimir.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnImprimir.setForeground(new java.awt.Color(255, 255, 255));
        btnImprimir.setText("Imprimir");
        btnImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImprimir.setMaximumSize(new java.awt.Dimension(80, 23));
        btnImprimir.setMinimumSize(new java.awt.Dimension(80, 23));
        btnImprimir.setName("btnImprimir"); // NOI18N
        btnImprimir.setPreferredSize(new java.awt.Dimension(70, 40));
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnImprimirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnImprimirMouseExited(evt);
            }
        });
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        pnlprincipal.add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 525, 110, 40));

        btnFechar.setBackground(new java.awt.Color(249, 105, 14));
        btnFechar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnFechar.setForeground(new java.awt.Color(255, 255, 255));
        btnFechar.setText("Fechar");
        btnFechar.setBorderPainted(false);
        btnFechar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFechar.setMaximumSize(new java.awt.Dimension(80, 23));
        btnFechar.setMinimumSize(new java.awt.Dimension(80, 23));
        btnFechar.setName("btnFechar"); // NOI18N
        btnFechar.setPreferredSize(new java.awt.Dimension(70, 40));
        btnFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFecharMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFecharMouseExited(evt);
            }
        });
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        pnlprincipal.add(btnFechar, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 525, 110, 40));

        btnFinalizar.setBackground(new java.awt.Color(40, 167, 69));
        btnFinalizar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnFinalizar.setForeground(new java.awt.Color(255, 255, 255));
        btnFinalizar.setText("Finalizar");
        btnFinalizar.setBorderPainted(false);
        btnFinalizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFinalizar.setMaximumSize(new java.awt.Dimension(80, 23));
        btnFinalizar.setMinimumSize(new java.awt.Dimension(80, 23));
        btnFinalizar.setName("btnFinalizar"); // NOI18N
        btnFinalizar.setPreferredSize(new java.awt.Dimension(100, 40));
        btnFinalizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFinalizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFinalizarMouseExited(evt);
            }
        });
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });
        pnlprincipal.add(btnFinalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 525, 100, 40));

        getContentPane().add(pnlprincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFabricanteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFabricanteFocusLost

    }//GEN-LAST:event_txtFabricanteFocusLost

    private void txtFabricanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFabricanteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFabricanteKeyPressed

    private void txtAnoFabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnoFabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnoFabActionPerformed

    private void txtCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorActionPerformed

    private void btnInserirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirItemActionPerformed

        jTabbedPanePecaServico.setSelectedIndex(0);
        FrmInserirPecaOS InserirPecaOS = new FrmInserirPecaOS(cod_os, "S");

        JDesktopPanePrincipall.add(InserirPecaOS);
        InserirPecaOS.setVisible(true);
        InserirPecaOS.setPosicao();

    }//GEN-LAST:event_btnInserirItemActionPerformed

    private void btnSalvarOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarOSActionPerformed

        OrdemServico ordemServico = new OrdemServico();
        ordemServico.setOs_Cod(cod_os);
        ordemServico.setOs_Def(jTextAreaDefeito.getText());
        ordemServico.setOs_Dat_Sai(jDateChooserDataSaida.getDate());
        ordemServico.setOs_Tan(cmbTanque.getSelectedItem().toString());
        if(cmbStatusOS.getSelectedItem().equals(StatusOS.SEF.getDescricao())){
            ordemServico.setOs_Sit(StatusOS.SEF.toString());
        }else{
            ordemServico.setOs_Sit(StatusOS.SEA.toString());
        }

        if (txtKmEntrada.getText().isEmpty()) {
            ordemServico.setOs_Km_Ent(Integer.parseInt("0"));
        } else {
            ordemServico.setOs_Km_Ent(Integer.parseInt(txtKmEntrada.getText()));
        }

        OrdemServicoDAO.alterarOrdemServico(ordemServico);

    }//GEN-LAST:event_btnSalvarOSActionPerformed

    private void btnInserirServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirServicoActionPerformed

        jTabbedPanePecaServico.setSelectedIndex(1);
        FrmInserirServicoOS InserirServicoOS = new FrmInserirServicoOS(cod_os, "S");

        JDesktopPanePrincipall.add(InserirServicoOS);
        InserirServicoOS.setVisible(true);
        InserirServicoOS.setPosicao();
    }//GEN-LAST:event_btnInserirServicoActionPerformed

    private void txtCombustivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCombustivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCombustivelActionPerformed

    private void cmbTanqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTanqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTanqueActionPerformed

    private void btnAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarItemActionPerformed
        
        alterarItem();
       
    }//GEN-LAST:event_btnAlterarItemActionPerformed

    private void btnExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirItemActionPerformed
        excluir();
    }//GEN-LAST:event_btnExcluirItemActionPerformed

    private void btnExcluirItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirItemMouseEntered
        btnExcluirItem.setBackground(new Color(200,35,51));
        btnExcluirItem.setForeground(new Color(255,255,255));
        btnExcluirItem.setFont(new java.awt.Font("Arial", 1, 16));        
    }//GEN-LAST:event_btnExcluirItemMouseEntered

    private void btnExcluirItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirItemMouseExited
        btnExcluirItem.setBackground(new Color(220,53,69));
        btnExcluirItem.setForeground(new Color(255,255,255));
        btnExcluirItem.setFont(new java.awt.Font("Arial", 1, 14));        
    }//GEN-LAST:event_btnExcluirItemMouseExited

    private void btnAlterarItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlterarItemMouseEntered
        btnAlterarItem.setBackground(new Color(33,126,56));
        btnAlterarItem.setForeground(new Color(255,255,255));
        btnAlterarItem.setFont(new java.awt.Font("Arial", 1, 16));
    }//GEN-LAST:event_btnAlterarItemMouseEntered

    private void btnAlterarItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlterarItemMouseExited
        btnAlterarItem.setBackground(new Color(40,167,69));
        btnAlterarItem.setForeground(new Color(255,255,255));
        btnAlterarItem.setFont(new java.awt.Font("Arial", 1, 14));
    }//GEN-LAST:event_btnAlterarItemMouseExited

    private void btnInserirItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirItemMouseEntered
        btnInserirItem.setBackground(new Color(0,80,217));
        btnInserirItem.setForeground(new Color(255,255,255));
        btnInserirItem.setFont(new java.awt.Font("Arial", 1, 16));
    }//GEN-LAST:event_btnInserirItemMouseEntered

    private void btnInserirItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirItemMouseExited
        btnInserirItem.setBackground(new Color(0,123,255));
        btnInserirItem.setForeground(new Color(255,255,255));
        btnInserirItem.setFont(new java.awt.Font("Arial", 1, 14));
    }//GEN-LAST:event_btnInserirItemMouseExited

    private void btnInserirServicoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirServicoMouseEntered
        btnInserirServico.setBackground(new Color(44,62,80));
        btnInserirServico.setForeground(new Color(255,255,255));
        btnInserirServico.setFont(new java.awt.Font("Arial", 1, 16));
    }//GEN-LAST:event_btnInserirServicoMouseEntered

    private void btnInserirServicoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirServicoMouseExited
        btnInserirServico.setBackground(new Color(52,73,94));
        btnInserirServico.setForeground(new Color(255,255,255));
        btnInserirServico.setFont(new java.awt.Font("Arial", 1, 14));
    }//GEN-LAST:event_btnInserirServicoMouseExited

    private void btnSalvarOSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarOSMouseEntered
        btnSalvarOS.setBackground(new Color(0,80,217));
        btnSalvarOS.setForeground(new Color(255,255,255));
        btnSalvarOS.setFont(new java.awt.Font("Arial", 1, 16));
    }//GEN-LAST:event_btnSalvarOSMouseEntered

    private void btnSalvarOSMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarOSMouseExited
        btnSalvarOS.setBackground(new Color(0,123,255));
        btnSalvarOS.setForeground(new Color(255,255,255));
        btnSalvarOS.setFont(new java.awt.Font("Arial", 1, 14));
    }//GEN-LAST:event_btnSalvarOSMouseExited

    private void btnFecharMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFecharMouseEntered
        btnFechar.setBackground(new Color(249,105,40));
        btnFechar.setForeground(Color.WHITE);
        btnFechar.setFont(new java.awt.Font("Arial", 1, 16));
    }//GEN-LAST:event_btnFecharMouseEntered

    private void btnFecharMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFecharMouseExited
        btnFechar.setBackground(new Color(249,105,14));
        btnFechar.setForeground(Color.WHITE);
        btnFechar.setFont(new java.awt.Font("Arial", 1, 14));
    }//GEN-LAST:event_btnFecharMouseExited

    private void btnImprimirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseEntered
        btnImprimir.setBackground(new Color(44,62,80));
        btnImprimir.setForeground(Color.WHITE);
        btnImprimir.setFont(new java.awt.Font("Arial", 1, 16));
    }//GEN-LAST:event_btnImprimirMouseEntered

    private void btnImprimirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseExited
        btnImprimir.setBackground(new Color(52,73,94));
        btnImprimir.setForeground(Color.WHITE);
        btnImprimir.setFont(new java.awt.Font("Arial", 1, 14));
    }//GEN-LAST:event_btnImprimirMouseExited

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        FrmListaOrdemServico listarOrdemServico = new FrmListaOrdemServico();
        JDesktopPanePrincipall.add(listarOrdemServico);
        listarOrdemServico.setVisible(true);
        listarOrdemServico.setPosicao();
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void cmbStatusOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusOSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbStatusOSActionPerformed

    private void btnFinalizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinalizarMouseEntered
        btnFinalizar.setBackground(new Color(33,126,56));
        btnFinalizar.setForeground(new Color(255,255,255));
        btnFinalizar.setFont(new java.awt.Font("Arial", 1, 16));
    }//GEN-LAST:event_btnFinalizarMouseEntered

    private void btnFinalizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinalizarMouseExited
        btnFinalizar.setBackground(new Color(40,167,69));
        btnFinalizar.setForeground(new Color(255,255,255));
        btnFinalizar.setFont(new java.awt.Font("Arial", 1, 14));    
    }//GEN-LAST:event_btnFinalizarMouseExited

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        int ok = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja finalizar"
                + " a Ordem de Serviço?", "Aviso", JOptionPane.YES_NO_OPTION);

        if (ok == 0) {
            OrdemServicoDAO.finalizarOS(cod_os);
            FrmListaOrdemServico listarOrdemServico = new FrmListaOrdemServico();
            JDesktopPanePrincipall.add(listarOrdemServico);
            listarOrdemServico.setVisible(true);
            listarOrdemServico.setPosicao();
            dispose();
        }
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed

        int quantItens = 0;

        quantItens += tblItens.getRowCount();
        quantItens += tblItensServico.getRowCount();

        if (quantItens > 0) {
            final FrmSplashImpressao SplashImpressao = new FrmSplashImpressao();
            JDesktopPanePrincipall.add(SplashImpressao);
            SplashImpressao.setVisible(true);
            SplashImpressao.setPosicao();

            Thread tempoAguarde = new Thread() {
                public void run() {

                    try {
                        OrdemServicoDAO.gerarRelatorioServico(cod_os);
                        SplashImpressao.dispose();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Error ao gerar o relatório", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                }
            };
            tempoAguarde.start();
        } else {
            JOptionPane.showMessageDialog(null, "Não há itens para impressão.");
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void carregarOrdemServico(int codigo) {        
        String tanque = null;
        SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
        String sql = "SELECT cod_Os, os_Num, os_Dat_Ent, os_Dat_Sai, os_def, os_Km_Ent, os_Tan, os_Sit, vei_Pla, vei_Fab, vei_Mod, vei_Ano_Fab, vei_Cor, vei_Com, cli_Nom "
                + "FROM carregarordemservico WHERE cod_Os = " + codigo;

        if (ordemServicoConect.conecta()) {
            try {
                ordemServicoConect.executaSQL(sql);
                while (ordemServicoConect.resultset.next()) {
                    txtNome.setText(ordemServicoConect.resultset.getString("cli_Nom"));
                    txtPlaca.setText(ordemServicoConect.resultset.getString("vei_Pla"));
                    txtModelo.setText(ordemServicoConect.resultset.getString("vei_Mod"));
                    txtFabricante.setText(ordemServicoConect.resultset.getString("vei_Fab"));
                    txtAnoFab.setText(ordemServicoConect.resultset.getString("vei_Ano_Fab").toString());
                    txtCor.setText(ordemServicoConect.resultset.getString("vei_Cor"));
                    Date dataEntrada = ordemServicoConect.resultset.getDate("os_Dat_Ent");
                    Date dataSaida = ordemServicoConect.resultset.getDate("os_Dat_Sai");
                    txtDataEntrada.setText(formatoData.format(dataEntrada));
                    jDateChooserDataSaida.setDate(dataSaida);
                    jTextAreaDefeito.setText(ordemServicoConect.resultset.getString("os_Def"));
                    txtOSNum.setText(ordemServicoConect.resultset.getString("os_Num"));
                    txtCombustivel.setText(ordemServicoConect.resultset.getString("vei_Com"));
                    txtKmEntrada.setText(ordemServicoConect.resultset.getString("os_Km_Ent"));
                    tanque = ordemServicoConect.resultset.getString("os_Tan");
                    if(tanque != null){
                        cmbTanque.setSelectedItem(ordemServicoConect.resultset.getString("os_Tan"));
                    }
                    
                    if(ordemServicoConect.resultset.getString("os_Sit").equals(StatusOS.SEF.toString())){
                        cmbStatusOS.setSelectedItem(StatusOS.SEF.getDescricao());
                    }else{
                        cmbStatusOS.setSelectedItem(StatusOS.SEA.getDescricao());
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar o O.S." + ex);
            }
            ordemServicoConect.desconectar();
            OrdemServicoItemDAO.listarOrdemServicoItem(codigo, "S");
            dimensionarTabelaPeca();
            OrdemServicoItemDAO.listarOrdemServicoItemServico(codigo, "S");
            dimensionarTabelaServico();
        }
    }

    private void excluir() {
        if (jTabbedPanePecaServico.getSelectedIndex() == 0) {
            if (tblItens.getRowCount() > 0) {
                if (tblItens.getSelectedRow() > -1) {
                    int linha = tblItens.getSelectedRow();
                    int Cod_Os = Integer.parseInt(tblItens.getValueAt(linha, 0).toString());
                    int Cod_Item = Integer.parseInt(tblItens.getValueAt(linha, 1).toString());
                    String descricao = tblItens.getValueAt(linha, 4).toString();

                    int ok = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja excluir"
                            + " o item " + descricao + "?", "Aviso", JOptionPane.YES_NO_OPTION);

                    if (ok == 0) {
                        OrdemServicoItemDAO.excluir(Cod_Os, Cod_Item);
                        OrdemServicoItemDAO.listarOrdemServicoItem(Cod_Os, "S");
                        dimensionarTabelaPeca();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um item na tabela abaixo para ser excluído.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Não há registro na tabela para ser excluído.");
            }
        } else {           
            if (tblItensServico.getRowCount() > 0) {
                if (tblItensServico.getSelectedRow() > -1) {
                    int linha = tblItensServico.getSelectedRow();
                    int Cod_Os = Integer.parseInt(tblItensServico.getValueAt(linha, 0).toString());
                    int Cod_Item = Integer.parseInt(tblItensServico.getValueAt(linha, 1).toString());
                    String descricao = tblItensServico.getValueAt(linha, 4).toString();

                    int ok = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja excluir"
                            + " o serviço " + descricao + "?", "Aviso", JOptionPane.YES_NO_OPTION);

                    if (ok == 0) {
                        OrdemServicoItemDAO.excluir(Cod_Os, Cod_Item);
                        OrdemServicoItemDAO.listarOrdemServicoItemServico(Cod_Os, "S");
                        dimensionarTabelaServico();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um serviço na tabela abaixo para ser excluído.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Não há registro na tabela para ser excluído.");
            }
        }
    }
    
    private void alterarItem() {
        if (jTabbedPanePecaServico.getSelectedIndex() == 0) {
            if (tblItens.getRowCount() > 0) {
                if (tblItens.getSelectedRow() > -1) {
                    int linha = tblItens.getSelectedRow();
                    int Cod_Os = Integer.parseInt(tblItens.getValueAt(linha, 0).toString());
                    int Cod_Item = Integer.parseInt(tblItens.getValueAt(linha, 1).toString());
                    String descricao = tblItens.getValueAt(linha, 4).toString();

                    int ok = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja excluir"
                            + " o item " + descricao + "?", "Aviso", JOptionPane.YES_NO_OPTION);

                    if (ok == 0) {
                        FrmAlterarItemOS alterarItemOS = new FrmAlterarItemOS(Cod_Os, Cod_Item, "S");

                        JDesktopPanePrincipall.add(alterarItemOS);
                        alterarItemOS.setVisible(true);
                        alterarItemOS.setPosicao(); 
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um item na tabela abaixo para ser alterado.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Não há registro na tabela para ser alterado.");
            }
        } else {           
            if (tblItensServico.getRowCount() > 0) {
                if (tblItensServico.getSelectedRow() > -1) {
                    int linha = tblItensServico.getSelectedRow();
                    int Cod_Os = Integer.parseInt(tblItensServico.getValueAt(linha, 0).toString());
                    int Cod_Item = Integer.parseInt(tblItensServico.getValueAt(linha, 1).toString());
                    String descricao = tblItensServico.getValueAt(linha, 4).toString();

                    int ok = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja excluir"
                            + " o serviço " + descricao + "?", "Aviso", JOptionPane.YES_NO_OPTION);

                    if (ok == 0) {
                        FrmAlterarItemOS alterarItemOS = new FrmAlterarItemOS(Cod_Os, Cod_Item, "S");
                        JDesktopPanePrincipall.add(alterarItemOS);
                        alterarItemOS.setVisible(true);
                        alterarItemOS.setPosicao(); 
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um serviço na tabela abaixo para ser excluído.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Não há registro na tabela para ser excluído.");
            }
        }
    }    

    public static void dimensionarTabelaPeca(){
        int altura = 20 * tblItens.getRowCount();
        tblItens.setPreferredSize(new java.awt.Dimension(840, altura));
    }
    
   public static void dimensionarTabelaServico(){
        int altura = 20 * tblItensServico.getRowCount();
        tblItensServico.setPreferredSize(new java.awt.Dimension(840, altura));
    }    
    
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarItem;
    private javax.swing.JButton btnExcluirItem;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnInserirItem;
    private javax.swing.JButton btnInserirServico;
    private javax.swing.JButton btnSalvarOS;
    private javax.swing.JComboBox<String> cmbStatusOS;
    private javax.swing.JComboBox<String> cmbTanque;
    private com.toedter.calendar.JDateChooser jDateChooserDataSaida;
    private javax.swing.JScrollPane jScrollPaneDefeito;
    private javax.swing.JScrollPane jScrollPaneItens;
    private javax.swing.JScrollPane jScrollPaneServico;
    private javax.swing.JTabbedPane jTabbedPanePecaServico;
    private javax.swing.JTextArea jTextAreaDefeito;
    private javax.swing.JLabel lblAnoFab;
    private javax.swing.JLabel lblCombustivel;
    private javax.swing.JLabel lblCor;
    private javax.swing.JLabel lblDataEntrada;
    private javax.swing.JLabel lblDataEntrega;
    private javax.swing.JLabel lblFabricante;
    private javax.swing.JLabel lblKmEntrada;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblOS;
    private javax.swing.JLabel lblPlaca;
    private javax.swing.JLabel lblStatusOS;
    private javax.swing.JLabel lblTanque;
    public static javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JPanel pnlProprietario;
    private javax.swing.JPanel pnlStatusOS;
    private javax.swing.JPanel pnlVeiculo;
    private javax.swing.JPanel pnlprincipal;
    public static javax.swing.JTable tblItens;
    public static javax.swing.JTable tblItensServico;
    private javax.swing.JTextField txtAnoFab;
    private javax.swing.JTextField txtCombustivel;
    private javax.swing.JTextField txtCor;
    private javax.swing.JTextField txtDataEntrada;
    private javax.swing.JTextField txtFabricante;
    private javax.swing.JTextField txtKmEntrada;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtOSNum;
    private javax.swing.JTextField txtPlaca;
    // End of variables declaration//GEN-END:variables

}
